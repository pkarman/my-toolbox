#!/usr/bin/env perl
use strict;
use warnings;

#
# call language-appropriate tidier.
#

use File::Slurp::Tiny qw( read_file );

if ( !@ARGV ) {
    die "$0 filename\n";
}

my $debug = 1;

for my $file (@ARGV) {
    my $is_x = -x $file;
    my $buf  = read_file($file);
    if ( is_php( $buf, $file ) ) {
        run_php_tidy($file);
    }
    elsif ( is_perl( $buf, $file ) ) {
        run_perl_tidy($file);
    }
    elsif ( is_ruby( $buf, $file ) ) {
        run_ruby_tidy($file);
    }
    elsif ( is_js( $buf, $file ) ) {
        run_js_prettier($file);
    }
    elsif ( is_python( $buf, $file ) ) {
        run_python_prettier($file);
    }
    run("chmod +x $file") if $is_x;
}

sub is_php {
    my $buf  = shift;
    my $file = shift;
    if ( $buf =~ m/<\?php/ ) {
        return 1;
    }
    if ( $file =~ m/\.php$/ ) {
        return 1;
    }
    return 0;
}

sub is_perl {
    my $buf  = shift;
    my $file = shift;
    if ( $file =~ m/\.(pm|pl)$/ ) {
        return 1;
    }
    if ( $buf =~ m!use strict;! ) {
        return 1;
    }
    if ( $buf =~ m!/usr/bin/env perl! ) {
        return 1;
    }
    if ( $buf =~ m!/usr/bin/perl! ) {
        return 1;
    }
    if ( $buf =~ m/package \w+/ ) {
        return 1;
    }
    return 0;
}

sub is_ruby {
    my $buf  = shift;
    my $file = shift;
    if ( $file =~ m/\.(rake|rb)$/ ) {
        return 1;
    }
    if ( $buf =~ m!/bin/ruby! ) {
        return 1;
    }
    if ( $buf =~ m!require (['"])rubygems\1! ) {
        return 1;
    }
}

sub is_js {
    my ( $buf, $file ) = @_;
    return 1 if $buf =~ /env node/;
    return $file =~ /\.jsx?$/;
}

sub is_python {
    my ( $buf, $file ) = @_;
    return 1 if $buf =~ /env python/;
    return $file =~ /\.py$/;
}

sub run {
    my $cmd = shift;

    #warn $cmd if $debug;
    system($cmd) and die "$cmd failed: $!";
}

sub run_perl_tidy {
    my $file = shift;
    run("perltidy -pbp $file > $file.tdy && mv $file.tdy $file");
}

sub run_php_tidy {
    my $file = shift;
    run("phptidy replace $file");
}

sub run_ruby_tidy {
    my $file = shift;
    run("rbeautify $file > $file.tdy && mv $file.tdy $file");
}

sub run_js_prettier {
    my $file = shift;
    run("npx prettier -w $file");
}

sub run_python_prettier {
    my $file = shift;
    run("black $file");
}
